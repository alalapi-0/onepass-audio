# Example environment overrides for WireGuard provisioning scripts.
# Copy this file to server/provision/.env and adjust values to suit your
# infrastructure. Every option is optional; scripts provide sensible defaults.

# WAN network interface that provides Internet connectivity. The installer will
# verify its existence and ask you to override with --wan-if if different.
WAN_IF=eth0

# WireGuard interface name. Defaults to wg0.
WG_IF=wg0

# UDP listening port. Use 443 if your provider blocks 51820.
WG_PORT=51820

# Internal VPN subnet (CIDR). The installer assigns the first usable address to
# the server and automatically allocates peers from the same prefix.
WG_SUBNET=10.6.0.0/24
# Optional IPv6 ULA prefix for dual-stack deployments (e.g. fd86:ea04:1115::/64).
WG_SUBNET_V6=

# Default DNS servers handed to clients. Comma separated list.
WG_DNS=1.1.1.1,1.0.0.1

# Default MTU to recommend to clients. Most environments work well with 1420.
WG_MTU=1420

# Preferred firewall backend: auto, ufw, iptables, or nftables.
WG_FIREWALL=auto

# Whether to enable IPv6 forwarding. Accepts true or false.
WG_IPV6=false

# Optional public endpoint (IP or DNS):PORT used inside generated client
# profiles. If left empty the scripts try to detect the current public IPv4
# address. When using a domain, include the port (e.g. vpn.example.com:51820).
WG_ENDPOINT=

# Persistent keepalive seconds injected into new peers unless overridden.
WG_KEEPALIVE=25

# Allowed IPs assigned to new peers. Defaults to full-tunnel routing.
WG_ALLOWED_IPS=0.0.0.0/0, ::/0
